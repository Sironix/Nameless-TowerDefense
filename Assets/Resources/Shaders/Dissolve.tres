[gd_resource type="VisualShader" load_steps=18 format=2]

[ext_resource path="res://Assets/Resources/Shaders/Noise.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
function = 12

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 9

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=8]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeColorConstant" id=9]
constant = Color( 0.249938, 0.0557069, 0.472656, 1 )

[sub_resource type="VisualShaderNodeColorOp" id=10]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorOp" id=11]

[sub_resource type="VisualShaderNodeTexture" id=1]
source = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=16]
uniform_name = "blep"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=14]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 0.2 ]
operator = 9

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// Color:17
	vec3 n_out17p0 = vec3(0.249938, 0.055707, 0.472656);
	float n_out17p1 = 1.000000;

// Input:8
	vec3 n_out8p0 = vec3(UV, 0.0);

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out8p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Input:10
	float n_out10p0 = TIME;

// ScalarFunc:11
	float n_out11p0 = sin(n_out10p0);

// ScalarFunc:12
	float n_out12p0 = abs(n_out11p0);

// ScalarOp:9
	float n_out9p0 = step(dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333)), n_out12p0);

// ScalarOp:14
	float n_in14p1 = 0.05000;
	float n_out14p0 = n_out12p0 - n_in14p1;

// ScalarOp:13
	float n_out13p0 = step(dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333)), n_out14p0);

// ScalarOp:15
	float n_out15p0 = n_out9p0 - n_out13p0;

// ColorOp:18
	vec3 n_out18p0 = min(n_out17p0, vec3(n_out15p0));

// ColorOp:19
	vec3 n_out19p0 = vec3(1.0) - (vec3(1.0) - n_out2p0) * (vec3(1.0) - n_out18p0);

// ScalarOp:7
	float n_out7p0 = n_out2p1 * n_out9p0;

// Output:0
	COLOR.rgb = n_out19p0;
	COLOR.a = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -241.479, -22.8434 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 700, 80 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 140, 80 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -140, 100 )
nodes/fragment/6/node = SubResource( 12 )
nodes/fragment/6/position = Vector2( 0, 160 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( 380, 140 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( -140, 240 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( 220, 200 )
nodes/fragment/10/node = SubResource( 3 )
nodes/fragment/10/position = Vector2( -220, 400 )
nodes/fragment/11/node = SubResource( 4 )
nodes/fragment/11/position = Vector2( -100, 400 )
nodes/fragment/12/node = SubResource( 5 )
nodes/fragment/12/position = Vector2( 40, 400 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( 300, 360 )
nodes/fragment/14/node = SubResource( 7 )
nodes/fragment/14/position = Vector2( 200, 440 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( 480, 320 )
nodes/fragment/17/node = SubResource( 9 )
nodes/fragment/17/position = Vector2( 540, 240 )
nodes/fragment/18/node = SubResource( 10 )
nodes/fragment/18/position = Vector2( 640, 320 )
nodes/fragment/19/node = SubResource( 11 )
nodes/fragment/19/position = Vector2( 520, 80 )
nodes/fragment/20/node = SubResource( 16 )
nodes/fragment/20/position = Vector2( -80, 40 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 8, 0, 6, 0, 6, 0, 9, 0, 9, 0, 7, 1, 11, 0, 12, 0, 12, 0, 9, 1, 2, 1, 7, 0, 10, 0, 11, 0, 6, 0, 13, 0, 12, 0, 14, 0, 14, 0, 13, 1, 9, 0, 15, 0, 13, 0, 15, 1, 15, 0, 18, 1, 17, 0, 18, 0, 2, 0, 19, 0, 7, 0, 0, 1, 18, 0, 19, 1, 19, 0, 0, 0 )
